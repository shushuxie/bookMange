<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">



    <!-- 扫描器，不扫控制器-->
    <context:component-scan base-package="com.enjoy.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>


    <!-- spring配置文件，这里主要配置和业务逻辑有关的-->
    <!-- ==================数据源，事务控制。。。===============-->

    <!-- 加载文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>


    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--  ==============================  -->

    <!-- ======================配置和mybatis的整合============== -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定mybatis全局配置文件的位置-->
        <property name="configLocation" value="classpath:mybatisConfig.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.enjoy.*.entity"/>
        <!-- 指定mybatis，mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mapper/*/*.xml"></property>
    </bean>

    <!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描所有的dao接口的实现，加入到ioc容器中-->
        <property name="basePackage" value="com.enjoy.common.dao"></property>
    </bean>
    <!-- 配置一个可以执行批量的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
        <!-- 设置批量生成 -->
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>
    <!--    <mybatis:scan base-package="com.may.crud.dao"></mybatis:scan>-->
    <!--  ======================================  -->


    <!-- ==============事务控制配置====================== -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制数据源 -->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>
    <!--支持注解驱动的事务管理，指定事务管理器-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>